name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
  pull_request:

jobs:
  build-docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile
            tag: py311
            latest_image: true
          - dockerfile: ./py310.Dockerfile
            tag: py310
            latest_image: false
          - dockerfile: ./py39.Dockerfile
            tag: py39
            latest_image: false

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set ENV Variables
        run: |
          echo "BUILD_VER=$(cat ${{ matrix.dockerfile }} | grep 'FROM python:' | cut -d ":" -f 2 | cut -d "-" -f 1)" >> $GITHUB_ENV
          echo "GIT_SHA=$$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "GIT_REF=$(git symbolic-ref -q --short HEAD || git describe --tags --exact-match)" >> $GITHUB_ENV

          # Generate Tag Env Vars
          TAGS=""

          # if latest_image is true, add latest tag to docker.io
          if [ "${{ matrix.latest_image }}" = "true" ]; then
            TAGS+="docker.io/divkix/docker-python-base:latest,"
          fi

          # if latest_image is true, add latest tag to ghcr.io
          if [ "${{ matrix.latest_image }}" = "true" ]; then
            TAGS+="ghcr.io/divkix/docker-python-base:latest,"
          fi

          # if tag is set, add tag
          TAGS+="docker.io/divkix/docker-python-base:${{ matrix.tag }},"
          TAGS+="ghcr.io/divkix/docker-python-base:${{ matrix.tag }},"

          # trim the last comma and set the env var
          echo "TAGS=${TAGS::${#TAGS}-1}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.TAGS }}
          labels: |
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.description=Created from commit ${{ env.GIT_SHA }} and ref ${{ env.GIT_REF }}
            org.opencontainers.image.ref.name=${{ env.GIT_REF }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ env.BUILD_VER }}

  update-description:
    name: Update DockerHub Description
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - uses: actions/checkout@v3
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

  automerge-dependabot-pr:
    needs: build-docker
    uses: divkix/reusable-workflows/.github/workflows/automerge-dependabot-pr.yml@main
